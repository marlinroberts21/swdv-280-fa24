@page
@model total_test_1.Pages.AppointmentsModel

@{
    ViewData["Title"] = "Appointments Page";
    var availableTimes = Model.TimeOptions ?? new List<SelectListItem>();
    var availableCategories = Model.CategoryOptions ?? new List<SelectListItem>();
}

<head><title>Appointments</title></head>
<body>
    <h1 class="text-center">Schedule an Appointment!</h1>
    <br />

    <p class="text-center">Please fill out the form below with your information and choose an available appointment time.</p>
    <br />


<!-- The form for scheduling an appointment -->
<form asp-page-handler="Submit" method="post" id="appointmentForm" class="mx-auto w-50">
    <div class="d-flex flex-wrap justify-content-between">
            <div class="form-group">
                <label class="form-label">Date:</label> <input class="form-control" asp-for="SelectedDate" type="date" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" id="SelectedDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="SelectedDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="form-label" >Time:</label>
                <select class="form-select" id="time" asp-for="SelectedTimeId">
                    @foreach(var time in availableTimes)
                    {
                        <option value="@time.Value">@time.Text</option>
                    }
                </select>
                <span asp-validation-for="SelectedTimeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="form-label">Type of Service:</label>
                <select asp-for="CategoryId" class="form-select">
                    @foreach (var category in availableCategories)
                    {
                        <option value="@category.Value">@category.Text</option>
                    }
                </select> 
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
    </div> <br />

   
    <div class="form-group">
            <label class="form-label">First Name: </label><input asp-for="FirstName" class="form-control" type="text" />
            <span asp-validation-for="FirstName" class="text-danger"></span> <br />
    </div>
        

    <div class="form-group">
            <label class="form-label">Last Name: </label><input asp-for="LastName" class="form-control" type="text" />
            <span asp-validation-for="LastName" class="text-danger"></span> <br />
    </div>
      
    <div class="form-group">
            <label class="form-label">Email Address: </label><input asp-for="Email" class="form-control" type="text" /> 
            <span asp-validation-for="Email" class="text-danger"></span> <br />
    </div>
        

    <div class="form-group">
            <label class="form-label">Phone number: </label><input asp-for="PhoneNumber" class="form-control" type="text" /> 
            <span asp-validation-for="PhoneNumber" class="text-danger"></span><br />
    </div>
        

    <div class="d-flex justify-content-between">
        <button onclick="resetButtonClicked()" class="btn btn-primary" >Clear</button>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const dateInput = document.getElementById("SelectedDate");
            if (!dateInput) {
                console.error("SelectedDate input not found in the DOM");
                return;
            }

            const noTimesMessage = document.createElement("p");
            noTimesMessage.style.color = "red";
            noTimesMessage.style.display = "none";
            noTimesMessage.id = "noTimesMessage";
            dateInput.parentNode.appendChild(noTimesMessage);

            dateInput.addEventListener('change', async (e) => {
                console.log("Date changed");
                const selectedDate = e.target.value;

                // Fetch and populate logic
                const response = await fetch(`/Appointments?handler=FetchTimes&selectedDate=${selectedDate}`);
                const timesDropdown = document.getElementById("time");
                timesDropdown.innerHTML = ""; // Clear existing options

                noTimesMessage.style.display = "none";

                if (response.ok) {
                    const data = await response.json();

                    if (data.times && data.times.length > 0) {
                        data.times.forEach(time => {
                            const option = document.createElement("option");
                            option.value = time.value;
                            option.textContent = time.text;
                            timesDropdown.appendChild(option);
                        });
                    }
                    else{
                            // Display the no times message
                        noTimesMessage.textContent = data.message;
                        noTimesMessage.style.display = "block";
                    }
                } 
                else {
                    console.error("Failed to fetch available times");
                }
            });
        });

        function resetButtonClicked() {
            // Select the text input fields by their 'asp-for' attributes
            const textInputs = [
                document.getElementById("FirstName"),
                document.getElementById("LastName"),
                document.getElementById("Email"),
                document.getElementById("PhoneNumber")
            ];

            // Loop through each input and clear the value
            textInputs.forEach(input => {
                if (input) {
                    input.value = '';  // Reset the value of the input field to an empty string
                }
            });
        }

    </script>

</body>



